# Load the debug and release variables
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB DATA_FILES "{{data_pattern}}")
foreach(f ${DATA_FILES})
    include(${f})
endforeach()
# Create the targets for all the components
foreach(_COMPONENT {{ '${' + pkg_name + '_COMPONENT_NAMES' + '}' }} )
    if(NOT TARGET ${_COMPONENT})
        add_library(${_COMPONENT} INTERFACE IMPORTED)
        message(STATUS "Conan: Component target declared '${_COMPONENT}'")
    endif()
endforeach()
if(NOT TARGET {{ root_target_name }})
    add_library({{ root_target_name }} INTERFACE IMPORTED)
    message(STATUS "Conan: Target declared '{{ root_target_name }}'")
endif()
{%- for alias, target in cmake_target_aliases.items() %}
if(NOT TARGET {{alias}})
    add_library({{alias}} INTERFACE IMPORTED)
    set_property(TARGET {{ alias }} PROPERTY INTERFACE_LINK_LIBRARIES {{target}})
    message(STATUS "Conan: Target declared '{{ alias }}'")
else()
    message(WARNING "Target name '{{alias}}' already exists.")
endif()
{%- endfor %}
{%- for comp_name, component_aliases in cmake_component_target_aliases.items() %}
    {%- for alias, target in component_aliases.items() %}
if(NOT TARGET {{alias}})
    add_library({{alias}} INTERFACE IMPORTED)
    set_property(TARGET {{ alias }} PROPERTY INTERFACE_LINK_LIBRARIES {{target}})
else()
    message(WARNING "Target name '{{alias}}' already exists.")
endif()
    {%- endfor %}
{%- endfor %}
# Load the debug and release library finders
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/{{ target_pattern }}")
foreach(f ${CONFIG_FILES})
    include(${f})
endforeach()
